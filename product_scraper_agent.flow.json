tool_specs_json = {
    "tools": [
        {
            "name": "URL Input Tool",
            "inputs": [
                {"field": "url", "type": "str", "description": "URL to scrape"}
            ],
            "output_example": {"url": "https://www.shein.com/item/12345.html"}
        },
        {
            "name": "Bot Defense Tool",
            "inputs": [
                {"field": "url", "type": "str", "description": "Passed forward"},
                {"field": "headers", "type": "dict", "description": "Adds random User-Agent, optional Proxy info"},
                {"field": "delay_seconds", "type": "float", "description": "Random delay between 2â€“10 seconds"}
            ],
            "output_example": {
                "url": "https://www.shein.com/item/12345.html",
                "headers": {"User-Agent": "Random Chrome UA"},
                "delay_seconds": 4.2
            }
        },
        {
            "name": "Crawler Tool (PlaywrightCrawler)",
            "inputs": [
                {"field": "url", "type": "str", "description": "URL to visit"},
                {"field": "headers", "type": "dict", "description": "Headers to apply in browser session"}
            ],
            "output_example": {
                "html_content": "<html>....</html>"
            }
        },
        {
            "name": "Scraper Tool",
            "inputs": [
                {"field": "html_content", "type": "str", "description": "Raw page HTML"},
                {"field": "vendor", "type": "str", "description": "\"shein\" or \"temu\""}
            ],
            "output_example": {
                "title": "Summer Dress",
                "price": "24.99",
                "currency": "USD",
                "images": ["https://cdn.shein.com/path.jpg"],
                "category": "Dresses",
                "description": "A beautiful dress for summer.",
                "source_url": "https://shein.com/item/12345",
                "vendor": "shein"
            }
        },
        {
            "name": "Cleaner Tool",
            "inputs": [
                {"field": "raw_data", "type": "dict", "description": "Unnormalized scraped product data"}
            ],
            "output_example": {
                "title": "Summer Dress",
                "price_cents": 2499,
                "currency": "USD",
                "images": ["https://cdn.shein.com/path.jpg"],
                "category": "Dresses",
                "description": "A beautiful dress for summer.",
                "source_url": "https://shein.com/item/12345",
                "vendor": "shein"
            }
        },
        {
            "name": "Validator Tool",
            "inputs": [
                {"field": "clean_data", "type": "dict", "description": "Normalized and cleaned product info"}
            ],
            "output_example_valid": {
                "validated_data": {}
            },
            "output_example_error": {
                "error": "Missing required field: title"
            }
        },
        {
            "name": "API Poster Tool",
            "inputs": [
                {"field": "validated_data", "type": "dict", "description": "Clean, validated data ready for API POST"},
                {"field": "api_url", "type": "str", "description": "Target API endpoint"},
                {"field": "api_key", "type": "str", "description": "(Optional) API key for authentication"}
            ],
            "output_example": {
                "status": "success",
                "response_code": 200
            }
        },
        {
            "name": "Logger Tool",
            "inputs": [
                {"field": "event_type", "type": "str", "description": "Event like \"scrape_success\", \"post_error\""},
                {"field": "message", "type": "str", "description": "Log message"},
                {"field": "data", "type": "dict", "description": "Payload related to event"}
            ],
            "output_example": "No output; logs to file or console"
        }
    ]
}

import json
tool_specs_json_str = json.dumps(tool_specs_json, indent=2)
tool_specs_json_str
